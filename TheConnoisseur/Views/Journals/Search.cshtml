@model IEnumerable<TheConnoisseur.Models.Journal>

@{
    ViewBag.Title = "Search";
}

<h2>Search Jounals</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="form-group">
            @Html.Label("Enter word or phrase:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            @Html.Editor("searchTerm", new { htmlAttributes = new { @class = "form-control", @required="required" }})
            </div>
        </div>
        
        @* Will be implemented so to specify Journal Type - details view link will be added dynamically to each journal entry
        <div class="form-group">
            @Html.Label("Choose journal type:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <select name="journalType" required>
                    <option value="">--Select Journal Type--</option>
                    <option value="co">Coffee</option>
                    <option value="be">Beer</option>
                </select>
            </div>
        </div>
            *@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@if(Model != null)
{ 
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.AuthorID)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Maker)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImagePath)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rating)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.AuthorID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Maker)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ImagePath)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Rating)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
        </tr>
    }

    </table>
}